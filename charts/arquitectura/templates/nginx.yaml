{{- if .Values.nginx.enabled }}


# NGINX1  (namespace privado)

apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx1-www
  namespace: {{ .Values.privateNamespace }}
data:
  index.html: |
    <!doctype html>
    <html><head><meta charset="utf-8"><title>NGINX1</title></head>
    <body style="font-family: sans-serif">
      <h1>{{ .Values.nginx.nginx1.response }}</h1>
    </body></html>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx1-deploy
  namespace: {{ .Values.privateNamespace }}
  labels: { app: nginx1 }
spec:
  replicas: {{ .Values.nginx.nginx1.replicas }}
  selector:
    matchLabels: { app: nginx1 }
  template:
    metadata:
      labels: { app: nginx1 }
    spec:
      containers:
      - name: nginx
        image: {{ .Values.nginx.nginx1.image }}
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: {{ .Values.nginx.nginx1.port }}
        readinessProbe:
          httpGet: { path: /, port: http }
          initialDelaySeconds: 2
          periodSeconds: 5
        livenessProbe:
          httpGet: { path: /, port: http }
          initialDelaySeconds: 5
          periodSeconds: 10
        volumeMounts:
        - name: web
          mountPath: /usr/share/nginx/html/index.html
          subPath: index.html
      volumes:
      - name: web
        configMap:
          name: nginx1-www
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.nginx.nginx1.serviceName }}
  namespace: {{ .Values.privateNamespace }}
spec:
  selector: { app: nginx1 }
  type: {{ if .Values.nginx.exposeNodePorts }}NodePort{{ else }}ClusterIP{{ end }}
  {{- with .Values.nginx.nginx1.service.clusterIP }}
  clusterIP: {{ . }}
  {{- end }}
  ports:
  - name: http
    port: {{ .Values.nginx.nginx1.port }}
    targetPort: http
    {{- if .Values.nginx.exposeNodePorts }}
    nodePort: {{ .Values.nginx.nginx1.nodePort }}
    {{- end }}

# NGINX2
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx2-www
  namespace: {{ .Values.privateNamespace }}
data:
  index.html: |
    <!doctype html>
    <html><head><meta charset="utf-8"><title>NGINX2</title></head>
    <body style="font-family: sans-serif">
      <h1>{{ .Values.nginx.nginx2.response }}</h1>
    </body></html>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx2-deploy
  namespace: {{ .Values.privateNamespace }}
  labels: { app: nginx2 }
spec:
  replicas: {{ .Values.nginx.nginx2.replicas }}
  selector:
    matchLabels: { app: nginx2 }
  template:
    metadata:
      labels: { app: nginx2 }
    spec:
      containers:
      - name: nginx
        image: {{ .Values.nginx.nginx2.image }}
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: {{ .Values.nginx.nginx2.port }}
        readinessProbe:
          httpGet: { path: /, port: http }
          initialDelaySeconds: 2
          periodSeconds: 5
        livenessProbe:
          httpGet: { path: /, port: http }
          initialDelaySeconds: 5
          periodSeconds: 10
        volumeMounts:
        - name: web
          mountPath: /usr/share/nginx/html/index.html
          subPath: index.html
      volumes:
      - name: web
        configMap:
          name: nginx2-www
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.nginx.nginx2.serviceName }}
  namespace: {{ .Values.privateNamespace }}
spec:
  selector: { app: nginx2 }
  type: {{ if .Values.nginx.exposeNodePorts }}NodePort{{ else }}ClusterIP{{ end }}
  {{- with .Values.nginx.nginx2.service.clusterIP }}
  clusterIP: {{ . }}
  {{- end }}
  ports:
  - name: http
    port: {{ .Values.nginx.nginx2.port }}
    targetPort: http
    {{- if .Values.nginx.exposeNodePorts }}
    nodePort: {{ .Values.nginx.nginx2.nodePort }}
    {{- end }}

{{- end }}
